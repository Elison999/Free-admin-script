-- Script de Comandos Administrativos para Mobile
-- Interface otimizada para toque com auto-revidar e persistência

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local StarterGui = game:GetService("StarterGui")

local player = Players.LocalPlayer

-- Variáveis globais para persistência
_G.AdminScriptActive = true
_G.AutoRevenge = true

-- Lista de comandos disponíveis
local commands = {
    {name = "Explodir Todos", cmd = ":explode", chat = "/e :explode all"},
    {name = "Trazer Todos", cmd = ":bring", chat = "/e :bring all"},
    {name = "Congelar Todos", cmd = ":freeze", chat = "/e :freeze all"},
    {name = "Gelo Todos", cmd = ":ice", chat = "/e :ice all"},
    {name = "Gigante Todos", cmd = ":giant", chat = "/e :giant all"},
    {name = "Anão Todos", cmd = ":dwarf", chat = "/e :dwarf all"},
    {name = "Voar Todos", cmd = ":fly", chat = "/e :fly all"},
    {name = "Velocidade Todos", cmd = ":speed", chat = "/e :speed all"},
    {name = "Pular Alto Todos", cmd = ":jumppower", chat = "/e :jumppower all"},
    {name = "Invisível Todos", cmd = ":invisible", chat = "/e :invisible all"},
    {name = "Visível Todos", cmd = ":visible", chat = "/e :visible all"},
    {name = "Matar Todos", cmd = ":kill", chat = "/e :kill all"},
    {name = "Curar Todos", cmd = ":heal", chat = "/e :heal all"},
    {name = "Descongelar Todos", cmd = ":thaw", chat = "/e :thaw all"},
    {name = "Parar Voo Todos", cmd = ":unfly", chat = "/e :unfly all"}
}

-- Função para enviar mensagem no chat
local function sendChatMessage(message)
    pcall(function()
        game:GetService("Chat"):Chat(player.Character.Head, message, Enum.ChatColor.White)
    end)
end

-- Função para obter todos os jogadores
local function getAllPlayers()
    local playerNames = {}
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= player then
            table.insert(playerNames, p.Name)
        end
    end
    return playerNames
end

-- Função para executar comando via HD Admin
local function executeHDCommand(command, targetPlayer)
    local args = {
        [1] = command .. " " .. targetPlayer
    }
    
    pcall(function()
        ReplicatedStorage.HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
    end)
end

-- Função para executar comando em todos
local function executeCommandAll(commandData)
    -- Enviar no chat primeiro
    sendChatMessage(commandData.chat)
    
    -- Aguardar um pouco antes de executar
    wait(0.5)
    
    local allPlayers = getAllPlayers()
    
    for _, playerName in pairs(allPlayers) do
        executeHDCommand(commandData.cmd, playerName)
        wait(0.1)
    end
end

-- Sistema de auto-revidar
local lastCommands = {}

local function monitorCommands()
    if not ReplicatedStorage:FindFirstChild("HDAdminClient") then
        return
    end
    
    -- Monitorar quando comandos são usados em você
    local function onCommandUsed(commandData)
        if commandData and commandData.Target and commandData.Command and commandData.Executor then
            if commandData.Target == player.Name and commandData.Executor ~= player.Name then
                local executor = commandData.Executor
                local command = commandData.Command
                
                -- Aguardar um pouco antes de revidar
                wait(1)
                
                if _G.AutoRevenge then
                    -- Revidar com o mesmo comando
                    executeHDCommand(":" .. command, executor)
                    showNotification("Revidando " .. executor .. " com :" .. command)
                end
            end
        end
    end
    
    -- Conectar ao sistema de monitoramento
    pcall(function()
        ReplicatedStorage.HDAdminClient.Signals.CommandUsed.OnClientEvent:Connect(onCommandUsed)
    end)
end

-- Função para criar GUI
local function createGUI()
    local playerGui = player:WaitForChild("PlayerGui")
    
    -- Remover GUI existente se houver
    if playerGui:FindFirstChild("AdminCommandsGUI") then
        playerGui.AdminCommandsGUI:Destroy()
    end
    
    -- Criar GUI
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "AdminCommandsGUI"
    screenGui.Parent = playerGui
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.ResetOnSpawn = false -- Manter após morrer
    
    -- Frame principal
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Parent = screenGui
    mainFrame.Size = UDim2.new(0, 300, 0, 450)
    mainFrame.Position = UDim2.new(0, 20, 0, 20)
    mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    mainFrame.BorderSizePixel = 0
    mainFrame.Active = true
    mainFrame.Draggable = true
    
    -- Bordas arredondadas
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = mainFrame
    
    -- Título
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "Title"
    titleLabel.Parent = mainFrame
    titleLabel.Size = UDim2.new(1, 0, 0, 40)
    titleLabel.Position = UDim2.new(0, 0, 0, 0)
    titleLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    titleLabel.BorderSizePixel = 0
    titleLabel.Text = "Admin Mobile + Auto Revidar"
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextScaled = true
    titleLabel.Font = Enum.Font.GothamBold
    
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 12)
    titleCorner.Parent = titleLabel
    
    -- Toggle Auto Revidar
    local revengeToggle = Instance.new("TextButton")
    revengeToggle.Name = "RevengeToggle"
    revengeToggle.Parent = mainFrame
    revengeToggle.Size = UDim2.new(1, -20, 0, 35)
    revengeToggle.Position = UDim2.new(0, 10, 0, 45)
    revengeToggle.BackgroundColor3 = Color3.fromRGB(50, 150, 50)
    revengeToggle.BorderSizePixel = 0
    revengeToggle.Text = "Auto Revidar: ON"
    revengeToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
    revengeToggle.TextScaled = true
    revengeToggle.Font = Enum.Font.Gotham
    
    local revengeCorner = Instance.new("UICorner")
    revengeCorner.CornerRadius = UDim.new(0, 6)
    revengeCorner.Parent = revengeToggle
    
    -- Toggle Auto Reset Items
    local itemResetToggle = Instance.new("TextButton")
    itemResetToggle.Name = "ItemResetToggle"
    itemResetToggle.Parent = mainFrame
    itemResetToggle.Size = UDim2.new(1, -20, 0, 35)
    itemResetToggle.Position = UDim2.new(0, 10, 0, 85)
    itemResetToggle.BackgroundColor3 = Color3.fromRGB(180, 100, 50)
    itemResetToggle.BorderSizePixel = 0
    itemResetToggle.Text = "Auto Reset Items: ON"
    itemResetToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
    itemResetToggle.TextScaled = true
    itemResetToggle.Font = Enum.Font.Gotham
    
    local itemResetCorner = Instance.new("UICorner")
    itemResetCorner.CornerRadius = UDim.new(0, 6)
    itemResetCorner.Parent = itemResetToggle
    
    -- Variável global para controlar auto reset
    if _G.AutoResetItems == nil then
        _G.AutoResetItems = true
    end
    
    itemResetToggle.Text = "Auto Reset Items: " .. (_G.AutoResetItems and "ON" or "OFF")
    itemResetToggle.BackgroundColor3 = _G.AutoResetItems and Color3.fromRGB(180, 100, 50) or Color3.fromRGB(100, 100, 100)
    
    itemResetToggle.MouseButton1Click:Connect(function()
        _G.AutoResetItems = not _G.AutoResetItems
        itemResetToggle.Text = "Auto Reset Items: " .. (_G.AutoResetItems and "ON" or "OFF")
        itemResetToggle.BackgroundColor3 = _G.AutoResetItems and Color3.fromRGB(180, 100, 50) or Color3.fromRGB(100, 100, 100)
        
        if _G.AutoResetItems then
            showNotification("Auto Reset Items ativado!")
        else
            showNotification("Auto Reset Items desativado!")
        end
    end)
    
    -- ScrollingFrame para os botões
    local scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Name = "CommandsFrame"
    scrollFrame.Parent = mainFrame
    scrollFrame.Size = UDim2.new(1, -20, 1, -140)
    scrollFrame.Position = UDim2.new(0, 10, 0, 130)
    scrollFrame.BackgroundTransparency = 1
    scrollFrame.BorderSizePixel = 0
    scrollFrame.ScrollBarThickness = 8
    scrollFrame.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 100)
    
    -- Layout para os botões
    local listLayout = Instance.new("UIListLayout")
    listLayout.Parent = scrollFrame
    listLayout.SortOrder = Enum.SortOrder.LayoutOrder
    listLayout.Padding = UDim.new(0, 8)
    
    -- Criar botões para cada comando
    for i, commandData in pairs(commands) do
        local button = Instance.new("TextButton")
        button.Name = "Command" .. i
        button.Parent = scrollFrame
        button.Size = UDim2.new(1, -10, 0, 60)
        button.BackgroundColor3 = Color3.fromRGB(70, 130, 180)
        button.BorderSizePixel = 0
        button.Text = commandData.name
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.TextScaled = true
        button.Font = Enum.Font.Gotham
        button.LayoutOrder = i
        
        -- Bordas arredondadas do botão
        local buttonCorner = Instance.new("UICorner")
        buttonCorner.CornerRadius = UDim.new(0, 8)
        buttonCorner.Parent = button
        
        -- Efeito de hover/toque
        local originalColor = Color3.fromRGB(70, 130, 180)
        local hoverColor = Color3.fromRGB(90, 150, 200)
        local pressedColor = Color3.fromRGB(50, 110, 160)
        
        -- Eventos do botão
        button.MouseEnter:Connect(function()
            if not UserInputService.TouchEnabled then
                button.BackgroundColor3 = hoverColor
            end
        end)
        
        button.MouseLeave:Connect(function()
            if not UserInputService.TouchEnabled then
                button.BackgroundColor3 = originalColor
            end
        end)
        
        button.MouseButton1Down:Connect(function()
            button.BackgroundColor3 = pressedColor
        end)
        
        button.MouseButton1Up:Connect(function()
            button.BackgroundColor3 = UserInputService.TouchEnabled and originalColor or hoverColor
        end)
        
        -- Ação do botão
        button.MouseButton1Click:Connect(function()
            -- Feedback visual
            local tween = TweenService:Create(
                button,
                TweenInfo.new(0.1, Enum.EasingStyle.Quad),
                {Size = UDim2.new(1, -5, 0, 55)}
            )
            local tweenBack = TweenService:Create(
                button,
                TweenInfo.new(0.1, Enum.EasingStyle.Quad),
                {Size = UDim2.new(1, -10, 0, 60)}
            )
            
            tween:Play()
            tween.Completed:Connect(function()
                tweenBack:Play()
            end)
            
            -- Enviar comando no chat
            sendChatMessage(commandData.chat)
            
            -- Aguardar um pouco antes de executar
            wait(0.3)
            
            -- Executar comando em todos
            executeCommandAll(commandData)
            
            -- Notificação
            showNotification("Enviado: " .. commandData.name)
        end)
    end
    
    -- Atualizar tamanho do scroll frame
    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, (#commands * 68) + 10)
    
    -- Botão de minimizar/maximizar
    local toggleButton = Instance.new("TextButton")
    toggleButton.Name = "ToggleButton"
    toggleButton.Parent = screenGui
    toggleButton.Size = UDim2.new(0, 60, 0, 60)
    toggleButton.Position = UDim2.new(1, -80, 0, 20)
    toggleButton.BackgroundColor3 = Color3.fromRGB(220, 20, 20)
    toggleButton.BorderSizePixel = 0
    toggleButton.Text = "◀"
    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleButton.TextScaled = true
    toggleButton.Font = Enum.Font.GothamBold
    
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 30)
    toggleCorner.Parent = toggleButton
    
    local isMinimized = false
    
    toggleButton.MouseButton1Click:Connect(function()
        isMinimized = not isMinimized
        
        local targetPos = isMinimized and UDim2.new(1, 20, 0, 20) or UDim2.new(0, 20, 0, 20)
        local targetText = isMinimized and "▶" or "◀"
        
        local tween = TweenService:Create(
            mainFrame,
            TweenInfo.new(0.3, Enum.EasingStyle.Quad),
            {Position = targetPos}
        )
        
        tween:Play()
        toggleButton.Text = targetText
    end)
    
    -- Botão de fechar
    local closeButton = Instance.new("TextButton")
    closeButton.Name = "CloseButton"
    closeButton.Parent = mainFrame
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -35, 0, 5)
    closeButton.BackgroundColor3 = Color3.fromRGB(220, 20, 20)
    closeButton.BorderSizePixel = 0
    closeButton.Text = "✕"
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.TextScaled = true
    closeButton.Font = Enum.Font.GothamBold
    
    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0, 15)
    closeCorner.Parent = closeButton
    
    closeButton.MouseButton1Click:Connect(function()
        _G.AdminScriptActive = false
        screenGui:Destroy()
    end)
    
    -- Ajustar para mobile
    if UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled then
        mainFrame.Size = UDim2.new(0, 320, 0, 540)
        
        for _, button in pairs(scrollFrame:GetChildren()) do
            if button:IsA("TextButton") then
                button.Size = UDim2.new(1, -10, 0, 70)
            end
        end
        
        scrollFrame.CanvasSize = UDim2.new(0, 0, 0, (#commands * 78) + 10)
    end
end

-- Função de notificação
function showNotification(message)
    local playerGui = player:WaitForChild("PlayerGui")
    if not playerGui:FindFirstChild("AdminCommandsGUI") then return end
    
    local screenGui = playerGui.AdminCommandsGUI
    
    local notifFrame = Instance.new("Frame")
    notifFrame.Name = "Notification"
    notifFrame.Parent = screenGui
    notifFrame.Size = UDim2.new(0, 280, 0, 50)
    notifFrame.Position = UDim2.new(0.5, -140, 0, -60)
    notifFrame.BackgroundColor3 = Color3.fromRGB(50, 200, 50)
    notifFrame.BorderSizePixel = 0
    
    local notifCorner = Instance.new("UICorner")
    notifCorner.CornerRadius = UDim.new(0, 8)
    notifCorner.Parent = notifFrame
    
    local notifLabel = Instance.new("TextLabel")
    notifLabel.Parent = notifFrame
    notifLabel.Size = UDim2.new(1, -10, 1, 0)
    notifLabel.Position = UDim2.new(0, 5, 0, 0)
    notifLabel.BackgroundTransparency = 1
    notifLabel.Text = message
    notifLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    notifLabel.TextScaled = true
    notifLabel.Font = Enum.Font.Gotham
    
    -- Animação da notificação
    local tweenIn = TweenService:Create(
        notifFrame,
        TweenInfo.new(0.3, Enum.EasingStyle.Back),
        {Position = UDim2.new(0.5, -140, 0, 20)}
    )
    
    local tweenOut = TweenService:Create(
        notifFrame,
        TweenInfo.new(0.3, Enum.EasingStyle.Quad),
        {Position = UDim2.new(0.5, -140, 0, -60)}
    )
    
    tweenIn:Play()
    
    -- Remover notificação após 2.5 segundos
    spawn(function()
        wait(2.5)
        tweenOut:Play()
        tweenOut.Completed:Connect(function()
            notifFrame:Destroy()
        end)
    end)
end

-- Monitorar chat para detectar comandos usados em você
local function monitorChat()
    player.Chatted:Connect(function(message)
        -- Registrar comandos que você usa para evitar auto-revidar
        for _, cmd in pairs(commands) do
            if string.find(message:lower(), cmd.cmd:lower()) then
                lastCommands[player.Name] = {
                    command = cmd.cmd,
                    time = tick()
                }
                break
            end
        end
    end)
    
    -- Monitorar outros jogadores
    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer ~= player then
            otherPlayer.Chatted:Connect(function(message)
                if not _G.AutoRevenge then return end
                
                -- Verificar se o comando foi usado em você
                if string.find(message:lower(), player.Name:lower()) then
                    for _, cmd in pairs(commands) do
                        if string.find(message:lower(), cmd.cmd:lower()) then
                            -- Aguardar antes de revidar
                            wait(1.5)
                            
                            -- Revidar
                            executeHDCommand(cmd.cmd, otherPlayer.Name)
                            showNotification("Revidando " .. otherPlayer.Name .. " com " .. cmd.cmd)
                            break
                        end
                    end
                end
            end)
        end
    end
end

-- Função para manter o script após respawn
local function setupPersistence()
    player.CharacterAdded:Connect(function()
        if _G.AdminScriptActive then
            wait(2) -- Aguardar o character carregar
            createGUI()
            monitorChat()
            showNotification("Script recarregado após respawn!")
        end
    end)
end

-- Função para monitorar backpacks e usar reset automaticamente
local function monitorBackpacks()
    spawn(function()
        while _G.AdminScriptActive do
            wait(2) -- Verificar a cada 2 segundos
            
            if not _G.AutoResetItems then
                wait(1)
                continue
            end
            
            for _, targetPlayer in pairs(Players:GetPlayers()) do
                if targetPlayer ~= player and targetPlayer.Character then
                    local backpack = targetPlayer:FindFirstChild("Backpack")
                    local character = targetPlayer.Character
                    
                    -- Verificar backpack
                    local hasBackpackItems = false
                    if backpack then
                        for _, item in pairs(backpack:GetChildren()) do
                            if item:IsA("Tool") or item:IsA("HopperBin") then
                                hasBackpackItems = true
                                break
                            end
                        end
                    end
                    
                    -- Verificar se está segurando algum tool
                    local hasEquippedTool = false
                    if character:FindFirstChild("Humanoid") then
                        local humanoid = character.Humanoid
                        for _, item in pairs(character:GetChildren()) do
                            if item:IsA("Tool") then
                                hasEquippedTool = true
                                break
                            end
                        end
                    end
                    
                    -- Se tem items no backpack ou equipado, usar reset
                    if hasBackpackItems or hasEquippedTool then
                        executeHDCommand(":reset", targetPlayer.Name)
                        showNotification("Auto Reset: " .. targetPlayer.Name .. " (tinha items)")
                        wait(1) -- Aguardar antes de verificar novamente
                    end
                end
            end
        end
    end)
end

-- Sistema de monitoramento avançado de comandos
local function advancedCommandMonitor()
    spawn(function()
        while _G.AdminScriptActive do
            wait(0.5)
            
            if player.Character and player.Character:FindFirstChild("Humanoid") then
                local humanoid = player.Character.Humanoid
                
                -- Detectar se você morreu por comando
                if humanoid.Health <= 0 then
                    wait(1)
                    -- Verificar logs recentes para ver quem matou
                    -- (Este seria expandido com logs específicos do HD Admin)
                end
                
                -- Detectar outros efeitos de comandos
                -- (Freeze, speed changes, etc.)
            end
        end
    end)
end

-- Inicializar tudo
local function initialize()
    createGUI()
    monitorChat()
    monitorBackpacks() -- Adicionar monitoramento de backpacks
    setupPersistence()
    advancedCommandMonitor()
    
    -- Conectar novos jogadores ao monitoramento
    Players.PlayerAdded:Connect(function(newPlayer)
        wait(1)
        newPlayer.Chatted:Connect(function(message)
            if not _G.AutoRevenge then return end
            
            if string.find(message:lower(), player.Name:lower()) then
                for _, cmd in pairs(commands) do
                    if string.find(message:lower(), cmd.cmd:lower()) then
                        wait(1.5)
                        executeHDCommand(cmd.cmd, newPlayer.Name)
                        showNotification("Revidando " .. newPlayer.Name .. " com " .. cmd.cmd)
                        break
                    end
                end
            end
        end)
    end)
end

-- Iniciar o script
initialize()

print("Script Admin Mobile carregado com sucesso!")
print("Recursos:")
print("- Comandos enviados pelo chat")
print("- Auto revidar quando usarem comandos em você") 
print("- Auto reset em players com items no backpack")
print("- Mantém funcionando após morrer")
print("- Interface otimizada para mobile")
